/* src/components/Dashboard.css */
.dashboard-container {
  display: flex;
  min-height: 100vh;
  background-color: #f0f2f5;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* A more modern font */
}

.main-content {
  flex-grow: 1;
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 20px; /* Space between header/welcome and the grid */
}

.welcome-section {
  background-color: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  grid-column: 1 / -1; /* Make it span full width if placed directly in grid */
  
}

.welcome-heading {
  margin: 0 0 5px 0;
  color: #333;
  font-size: 24px;
  font-weight: 600;
}

.welcome-date {
  margin: 0;
  color: #777;
  font-size: 15px;
}

/* src/components/Dashboard.css */

/* ... (keep your existing .dashboard-container, .main-content, .welcome-section, etc. as they are) ... */

/* Main Dashboard Grid for content sections */
.dashboard-grid {
  display: grid;
  /* This is good for 3 columns on larger screens */
  grid-template-columns: repeat(3, 1fr); /* Or use repeat(auto-fit, minmax(300px, 1fr)); for flexibility */
  gap: 20px; /* Space between sections */
  margin-top: 20px;
}

/* General Card Styling (keep as is) */
.card {
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  padding: 20px;
}

/* Specific grid spans for stat cards (keep as is) */
.stat-cards-container {
  grid-column: 1 / -1; /* Spans all columns for the stat cards row */
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}

/* --- IMPORTANT CHANGE HERE --- */
/* For chart and total income wrappers: DO NOT make them span 2 columns */
/* They will naturally take 1 column in the 3-column grid */
.chart-card-wrapper,
.total-income-card-wrapper {
    /* REMOVE grid-column-start: span 2; from here */
    /* This rule should effectively be empty, or removed if you have no other properties specific to them besides what is already on .card */
    /* If you have other shared styles, keep the selector, but remove the grid-column property. */
    /* For instance, if you want them to behave like a normal card within the grid: */
}

/* For table wrappers: Make them span 2 columns to be wider */
.table-card-wrapper {
    grid-column: span 1; /* Make tables span 2 columns */
}

/* Responsive adjustments */
@media (max-width: 1200px) {
    /* Adjust grid for tablets/smaller desktops */
    .dashboard-grid {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Auto-fit columns (will likely go to 2 columns here) */
    }
    /* On these smaller screens, make all chart/table components span full width (1 column in an auto-fit grid) */
    .chart-card-wrapper,
    .total-income-card-wrapper,
    .table-card-wrapper {
        grid-column: span 1; /* Force them to take up 1 column on smaller screens */
    }
}

@media (max-width: 768px) {
    /* Adjust grid for mobile */
    .dashboard-grid {
        grid-template-columns: 1fr; /* Single column layout on small screens */
    }
    /* Ensure all items span 1 column */
    .chart-card-wrapper,
    .total-income-card-wrapper,
    .table-card-wrapper {
        grid-column: span 1;
    }
    /* ... (rest of your mobile adjustments for header etc.) */
}
    
    .header {
        flex-direction: column; /* Stack header items vertically */
        align-items: flex-start;
        gap: 15px;
    }
    .search-bar {
        width: 100%; /* Full width search bar */
    }
    .header-actions {
        width: 100%;
        justify-content: space-around; /* Distribute icons */
    }
.chart-row {
  display: grid;
  gap: 20px;
  margin-bottom: 20px;
}

.chart-row-3 {
  grid-template-columns: repeat(3, 1fr);
}

.chart-row-2 {
  grid-template-columns: repeat(2, 1fr);
}

.chart-item {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  padding: 20px;
}
